package org.iets3.ears.gxw.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.openapi.editor.menus.transformation.SNodeLocation;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.impl.cellActions.CellAction_DeleteSmart;
import jetbrains.mps.openapi.editor.cells.DefaultSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.OldNewCompositeSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.SChildSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;
import jetbrains.mps.lang.editor.cellProviders.RefCellCellProvider;
import jetbrains.mps.nodeEditor.InlineCellProvider;

public class NormalRisingEdgeReq_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_kvqdks_a(editorContext, node);
  }
  private EditorCell createCollection_kvqdks_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_kvqdks_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createProperty_kvqdks_a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_kvqdks_b0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_kvqdks_c0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_kvqdks_d0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_kvqdks_e0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_kvqdks_f0(editorContext, node));
    editorCell.addEditorCell(this.createRefCell_kvqdks_g0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_kvqdks_h0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_kvqdks_i0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_kvqdks_j0(editorContext, node));
    return editorCell;
  }
  private EditorCell createProperty_kvqdks_a0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("reqName");
    provider.setNoTargetText("<no reqName>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_reqName");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(attributeConcept, provider.getRoleAttributeKind(), editorCell);
    } else
    return editorCell;
  }
  private EditorCell createConstant_kvqdks_b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ":");
    editorCell.setCellId("Constant_kvqdks_b0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_kvqdks_c0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "When");
    editorCell.setCellId("Constant_kvqdks_c0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_kvqdks_d0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new NormalRisingEdgeReq_Editor.triggerSingleRoleHandler_kvqdks_d0(node, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x168a7cb10e4dea9bL, 0x168a7cb10e4dea9fL, "trigger"), editorContext);
    return provider.createCell();
  }
  private class triggerSingleRoleHandler_kvqdks_d0 extends SingleRoleCellProvider {
    public triggerSingleRoleHandler_kvqdks_d0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    protected EditorCell createChildCell(SNode child) {
      myEditorContext.getCellFactory().pushCellContext();
      myEditorContext.getCellFactory().setNodeLocation(new SNodeLocation.FromNode(child));
      try {
        EditorCell editorCell = super.createChildCell(child);
        editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x168a7cb10e4dea9bL, 0x168a7cb10e4dea9fL, "trigger"), child));
        editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x168a7cb10e4dea9bL, 0x168a7cb10e4dea9fL, "trigger"), child));
        installCellInfo(child, editorCell);
        return editorCell;
      } finally {
        myEditorContext.getCellFactory().popCellContext();
      }
    }

    protected boolean isCompatibilityMode() {
      return false;
    }

    private void installCellInfo(SNode child, EditorCell editorCell) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo(new OldNewCompositeSubstituteInfo(myEditorContext, new SChildSubstituteInfo(editorCell, myOwnerNode, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x168a7cb10e4dea9bL, 0x168a7cb10e4dea9fL, "trigger"), child), new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext)));
      }
      if (editorCell.getRole() == null) {
        editorCell.setRole("trigger");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      myEditorContext.getCellFactory().pushCellContext();
      myEditorContext.getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x168a7cb10e4dea9bL, 0x168a7cb10e4dea9fL, "trigger")));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_trigger");
        installCellInfo(null, editorCell);
        return editorCell;
      } finally {
        myEditorContext.getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no trigger>";
    }
  }
  private EditorCell createRefNode_kvqdks_e0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new NormalRisingEdgeReq_Editor.triggerModifierSingleRoleHandler_kvqdks_e0(node, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7f8bb363a2782aa8L, "triggerModifier"), editorContext);
    return provider.createCell();
  }
  private class triggerModifierSingleRoleHandler_kvqdks_e0 extends SingleRoleCellProvider {
    public triggerModifierSingleRoleHandler_kvqdks_e0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    protected EditorCell createChildCell(SNode child) {
      myEditorContext.getCellFactory().pushCellContext();
      myEditorContext.getCellFactory().setNodeLocation(new SNodeLocation.FromNode(child));
      try {
        EditorCell editorCell = super.createChildCell(child);
        editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7f8bb363a2782aa8L, "triggerModifier"), child));
        editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7f8bb363a2782aa8L, "triggerModifier"), child));
        installCellInfo(child, editorCell);
        return editorCell;
      } finally {
        myEditorContext.getCellFactory().popCellContext();
      }
    }

    protected boolean isCompatibilityMode() {
      return false;
    }

    private void installCellInfo(SNode child, EditorCell editorCell) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo(new OldNewCompositeSubstituteInfo(myEditorContext, new SChildSubstituteInfo(editorCell, myOwnerNode, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7f8bb363a2782aa8L, "triggerModifier"), child), new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext)));
      }
      if (editorCell.getRole() == null) {
        editorCell.setRole("triggerModifier");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      myEditorContext.getCellFactory().pushCellContext();
      myEditorContext.getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x6979ba361f3d77d6L, 0x7f8bb363a2782aa8L, "triggerModifier")));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_triggerModifier");
        installCellInfo(null, editorCell);
        return editorCell;
      } finally {
        myEditorContext.getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no triggerModifier>";
    }
  }
  private EditorCell createConstant_kvqdks_f0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ", the ");
    editorCell.setCellId("Constant_kvqdks_f0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefCell_kvqdks_g0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefCellCellProvider(node, editorContext);
    provider.setRole("systemName");
    provider.setNoTargetText("<no systemName>");
    EditorCell editorCell;
    provider.setAuxiliaryCellProvider(new NormalRisingEdgeReq_Editor._Inline_kvqdks_a6a());
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setReferenceCell(true);
      editorCell.setRole("systemName");
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(attributeConcept, provider.getRoleAttributeKind(), editorCell);
    } else
    return editorCell;
  }
  public static class _Inline_kvqdks_a6a extends InlineCellProvider {
    public _Inline_kvqdks_a6a() {
      super();
    }
    public EditorCell createEditorCell(EditorContext editorContext) {
      return this.createEditorCell(editorContext, this.getSNode());
    }
    public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
      return this.createProperty_kvqdks_a0g0(editorContext, node);
    }
    private EditorCell createProperty_kvqdks_a0g0(EditorContext editorContext, SNode node) {
      CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
      provider.setRole("name");
      provider.setNoTargetText("<no name>");
      provider.setReadOnly(true);
      EditorCell editorCell;
      editorCell = provider.createEditorCell(editorContext);
      editorCell.setCellId("property_name");
      editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
      SNode attributeConcept = provider.getRoleAttribute();
      if (attributeConcept != null) {
        EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
        return manager.createNodeRoleAttributeCell(attributeConcept, provider.getRoleAttributeKind(), editorCell);
      } else
      return editorCell;
    }
  }
  private EditorCell createConstant_kvqdks_h0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, " shall");
    editorCell.setCellId("Constant_kvqdks_h0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_kvqdks_i0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new NormalRisingEdgeReq_Editor.systemResponseSingleRoleHandler_kvqdks_i0(node, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x168a7cb10e4dea9bL, 0x168a7cb10e4dea9eL, "systemResponse"), editorContext);
    return provider.createCell();
  }
  private class systemResponseSingleRoleHandler_kvqdks_i0 extends SingleRoleCellProvider {
    public systemResponseSingleRoleHandler_kvqdks_i0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    protected EditorCell createChildCell(SNode child) {
      myEditorContext.getCellFactory().pushCellContext();
      myEditorContext.getCellFactory().setNodeLocation(new SNodeLocation.FromNode(child));
      try {
        EditorCell editorCell = super.createChildCell(child);
        editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x168a7cb10e4dea9bL, 0x168a7cb10e4dea9eL, "systemResponse"), child));
        editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x168a7cb10e4dea9bL, 0x168a7cb10e4dea9eL, "systemResponse"), child));
        installCellInfo(child, editorCell);
        return editorCell;
      } finally {
        myEditorContext.getCellFactory().popCellContext();
      }
    }

    protected boolean isCompatibilityMode() {
      return false;
    }

    private void installCellInfo(SNode child, EditorCell editorCell) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo(new OldNewCompositeSubstituteInfo(myEditorContext, new SChildSubstituteInfo(editorCell, myOwnerNode, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x168a7cb10e4dea9bL, 0x168a7cb10e4dea9eL, "systemResponse"), child), new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext)));
      }
      if (editorCell.getRole() == null) {
        editorCell.setRole("systemResponse");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      myEditorContext.getCellFactory().pushCellContext();
      myEditorContext.getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(myOwnerNode, MetaAdapterFactory.getContainmentLink(0x7731a166da1f472eL, 0xa40a2283f5e47dc5L, 0x168a7cb10e4dea9bL, 0x168a7cb10e4dea9eL, "systemResponse")));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_systemResponse");
        installCellInfo(null, editorCell);
        return editorCell;
      } finally {
        myEditorContext.getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no systemResponse>";
    }
  }
  private EditorCell createConstant_kvqdks_j0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ".");
    editorCell.setCellId("Constant_kvqdks_j0");
    editorCell.setDefaultText("");
    return editorCell;
  }
}
